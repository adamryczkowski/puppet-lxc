# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Returns number of subgids for user specified in args[0]
#
Puppet::Functions.create_function(:'lxc::getcntsubgid') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    # get fact getent_passwd and convert it into hash of user entries
    subgids={}
    entires = lookupvar('getsubgid').split('|')
    entires.each do |item|
      user,baseuid,cntuid = item.split(':')
      subgids[user] = cntuid ? cntuid : ""
    end

    # make sure args[0] is a strings
    if args[0].is_a?(String)
      subgids[args[0]]

    else 
      Puppet.warning "getcntsubgid: usage: getcntsubgid( user )"
      nil

    end
  
  end
end
